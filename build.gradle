plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id 'com.github.spotbugs' version '4.4.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

spotbugs {
	toolVersion = '4.4.4'
	sourceSets = [sourceSets.main]
	ignoreFailures = true
}

task spotbugsMain(type: SpotBugsTask, dependsOn: ['assemble']) {
	classes = fileTree("${project.buildDir}/classes/java/main")
	source = fileTree("${project.projectDir}/src/main/java")
	classpath = files()
}

task findbugsHtmlReport(dependsOn: 'spotbugsMain') {
	doLast {
		ant {
			taskdef(name: 'findbugs', classname: 'edu.umd.cs.findbugs.anttask.FindBugsTask', classpath: configurations.findbugs.asPath)
			findbugs(reportLevel: 'high', outputFile: "${project.buildDir}/findbugs.xml") {
				sourceDirs("${project.projectDir}/src/main/java")
				classDirs("${project.buildDir}/classes/java/main")
				exclude(name: '**/package-info.class')
				exclude(name: '**/*Test.class')
			}
			findbugsReport(todir: "${project.buildDir}/findbugs") {
				xml(withMessages: true)
				html(withMessages: true)
			}
		}
	}
}
