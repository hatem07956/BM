name: Deploy to AKS

on:
  workflow_run:
    workflows: ["build_docker_image"]

    branches:
      - main
      - dev
    types:
      - completed
    result: success

jobs:
    deploy:
      runs-on: ubuntu-latest
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        KUBECONFIG: ${{ secrets.KUBECONFIG }} # This secret contains the Kubernetes configuration for the AKS cluster, including the cluster endpoint, certificate, and authentication information.
      steps:
        - name: Login to Docker Hub #Login to dockerhub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Install kubectl #install kubectl on the github actions machine
          run: |
            sudo az aks install-cli
#In the Set Kubeconfig step, the workflow decodes the secrets.KUBECONFIG secret and writes it to a file named kubeconfig.yaml. This file is used by the kubectl command-line tool to connect to the AKS cluster and perform operations on Kubernetes resources.

        - name: Set Kubeconfig
          run: echo "${{ secrets.KUBECONFIG }}" | base64 --decode > kubeconfig.yaml


        - name: Deploy to AKS
          run: |
            if [[ ${{ github.ref }} == 'refs/heads/dev' ]]; then 
              kubectl apply -f kubernetes/deployment.yaml --namespace=dev
              kubectl apply -f kubernetes/service.yaml --namespace=dev
              kubectl apply -f ingress.yaml --namespace=dev
            
            elif [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
              kubectl apply -f kubernetes/deployment.yaml --namespace=prod
              kubectl apply -f kubernetes/service.yaml --namespace=prod
              kubectl apply -f ingress.yaml --namespace=prod
            fi
          env:
            KUBECONFIG: kubeconfig.yaml

